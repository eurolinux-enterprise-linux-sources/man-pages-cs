diff -urN man-pages-cs-0.18.20090209-orig/man-pages/man2/access.2 man-pages-cs-0.18.20090209/man-pages/man2/access.2
--- man-pages-cs-0.18.20090209-orig/man-pages/man2/access.2	1999-05-31 19:28:27.000000000 +0200
+++ man-pages-cs-0.18.20090209/man-pages/man2/access.2	2009-11-27 16:46:02.000000000 +0100
@@ -1,4 +1,5 @@
-.TH ACCESS 2 "4. září 1998" "Linux 1.2.13" "Linux - Příručka programátora"
+.\" Aktualizováno podle man-pages-3.09-2 z distribuce Fedora 10
+.TH ACCESS 2 "23. lisotpadu 2009" "Linux 1.2.13" "Linux - Příručka programátora"
 .do hla cs
 .do hpf hyphen.cs
 .SH JMÉNO
@@ -10,12 +11,12 @@
 .BI "int access(const char *" pathname ", int " mode );
 .fi
 .SH POPIS
-.B access
+\fBaccess\fP()
 kontroluje, zda proces může číst či zapisovat do souboru (nebo jiného
 objektu souborového systému) se jménem
-.I pathname .
-Lze jej také použít ke zjištění existence 
-.I pathname .
+\fI pathname\fP.
+Lze jej také použít ke zjištění existence
+\fIpathname\fP.
 Pokud je
 .I pathname
 symbolický odkaz, pak jsou testována přístupová práva souboru, na
@@ -37,18 +38,17 @@
 a na přístupových právech adresářů a souborů, na které směřují
 symbolické odkazy na cestě.
 
-Kontrola je provedena se 
+Kontrola je provedena se
 .I skutečným
 uid a gid procesu. Nebere se zřetel na efektivní id, které se projeví
 při souborové operaci. Tak mohou setuid programy snadno zjistit
 skutečná práva uživatele.
 
-Kontrolují se pouze příznakové bity; ne typ souboru či jeho obsah.
-Pokud je adresář "zápisu schopný", lze v něm pravděpodobně tvořit
-soubory - nemůžeme do něj zapisovat, jako do běžného souboru. Zrovna
-tak DOSový soubor může být "spustitelný", ale
-.BR execve (2)
-bude stále protestovat.
+Pokud má volající proces dostatečná privilegia (například skutečné UID
+je nula), pak je test
+.B X_OK
+pro soubor úspěšný, pokud je povoleno spouštění souboru jeho vlastníkem
+skupinou nebo ostatními.
 .SH "NÁVRATOVÁ HODNOTA"
 Při úspěchu (všechna kontrolovaná práva jsou dostupná) vrací nulu.
 Při neúspěchu (alespoň jeden druh přístupu reprezentovaný příslušným
@@ -58,18 +58,17 @@
 \-1, a proměnná
 .I errno
 je nastavena.
-.SH CHYBY
+.SH CHYBOVÉ STAVY
+\fBaccess\fP() by měl selhat pokud:
 .TP
 .B EACCES
-Požadovaný přístup by byl odepřen. 
+Přístup k požadovanému souboru by byl odepřen nebo právo na vyhledávání je odepřeno
+pro některý z adresářů v cestě \fIpathname\fP. (Viz také \fBpath_resolution\fP(7).)
 .TP
-.B EFAULT
+.B ELOOP
 .I pathname
-odkazuje někam mimo přístupný adresovatelný diskový prostor.
-.TP
-.B EINVAL
-.I mode
-je zadán chybně.
+obsahuje cyklický symbolický odkaz, např. symbolický odkaz odkazuje
+sám na sebe.
 .TP
 .B ENAMETOOLONG
 .I pathname
@@ -85,25 +84,84 @@
 .I pathname
 použité jako adresáře ve skutečnosti nejsou adresáře
 .TP
+.B EROFS
+Bylo požadováné právo zápisu pro soubor, ale souborový systém
+je pouze pro čtení.
+.PP
+\fBaccess\fP() může selhat pokud:
+.TP
+.B EFAULT
+.I pathname
+odkazuje někam mimo přístupný adresovatelný diskový prostor.
+.TP
+.B EINVAL
+.I mode
+je zadán chybně.
+.TP
+.B EIO
+Objevila se vstup výstupní chyba.
+.TP
 .B ENOMEM
 Málo paměti jádra.
 .TP
-.B ELOOP
-.I pathname
-obsahuje cyklický symbolický odkaz, např. symbolický odkaz odkazuje
-sám na sebe.
-.SH OMEZENÍ
-.B access
-vrací chybu i kdyby jeden jediný druh přístupu byl odepřen a všechny
-ostatní umožněny.
-.P
-.B access
-může zlobit na NFS souborových systémech, které mají zapnuté mapování UID,
-protože mapovaní UID je prováděno na serveru a je skryto před klienty.
-.SH "SPLŇUJE STANDARDY"
-SVID, AT&T, POSIX, X/OPEN, BSD 4.3
+.B ETXTBSY
+Bylo požadováno právo zápisu na spustitelný soubor, který je
+právě spuštěn.
+.SH POZNÁMKY
+\fBVarování\fP: Použití funkce \fBaccess\fP pro kontrolu zda
+je uživatel schopen například otevřít soubor, před tím, než tak
+opravdu učiníme, je bezpečnostní problém, protože je možné využít
+relativně krátkého časového okamžiku mezi kontrolou a otevřením souboru
+k manipulaci s ním. \fB Proto by jste se měli vyvarovat použití tohoto systémového
+volání pro tento účel\fP.
+
+Funkce \fBaccess\fP vrací chybu, je-li libovolný z přístupových typů
+specifikovaných v \fImode\fP odmítnut, i když jsou některé jiné
+přijaty.
+
+Pokud má volající proces dostatečné privilegia (například super uživatel),
+pak norma POSIX.1-2001 povoluje implementaci, která indikuje úspěch pro
+kontrolu
+.B X_OK
+i když není nastavený žádný z bitů, které povolují spouštění souboru.
+Linux toto nepovoluje.
+
+Soubor je přístupný pouze pokud je povoleno prohledávání všech adresářů,
+které se nacházejí v prefixu cesty k souboru (\fIpathname\fP). Pokud je
+libovolný z těchto adresářů nedostupný, pak volání \fBaccess\fP() skončí
+neúspěchem, nezáleží na tom, zda máme právo přistupovat k souboru
+samotnému.
+
+Jsou kontrolovány pouze bity, které určují přístup k souboru nikoli typ
+souboru nebo jeho obsah. Takže pokud je možný zápis do adresáře,
+pak to pravděpodobně znamená, že mohou být uvnitř tohoto adresáře vytvářeny
+soubory, a ne že lze adresář zapisovat jako soubor. Podobně může být
+DOS soubor shledán zapisovatelným, ale volání \fBexecve\fP(2) skončí
+chybovou hláškou.
+
+Volání \fBaccess\fP() nemusí korektně fungovat na NFS souborových systémech,
+které mají povolené UID mapování, protože UID mapování se provádí na
+straně serveru a je skryté před klientem, který kontroluje práva.
+
+.SH CHYBY
+Ve verzích kernelu 2.4 a starších jsou problemy v testu na \fBX_OK\fP
+pro super uživatele. Pokud jsou práva pro spouštění zakázána pro
+všechny uživatele a jedná se o soubor, ne adresář, pak tento
+test vrátí -1, pouze pokud je \fImode\fP specifikován jako \fBX_OK\fP. 
+Pokud je v \fImode\fP specifikováno i \fBR_OK\fP nebo \fBW_OK\fP pak
+\fBaccess\fP() vrací pro takovéto soubory 0. Verze kernelu 2.6
+(až do verze 2.6.3 včetně) se chovaly stejně jako kernel 2.4.
+
+V kernelech před verzí 2.6.20 ignorovala funkce \fBaccess\fP() efekt
+flagu \fBMS_NOEXEC\fP pokud byl tento příznak použit pro přípojení
+(\fBmount\fP(2)) souborového podsystému. Od verze 2.6.20 již funkce
+\fBaccess\fP() bere tento příznak v potaz.
+
 .SH "DALŠÍ INFORMACE"
-.BR stat "(2), " open "(2), " chmod "(2), " chown "(2), "
-.BR setuid "(2), " setgid (2).
+.BR chmod "(2), " chown "(2), " facestat "(2), " open "(2),
+.BR setgid "(2), " setuid (2), " stat "(2), " euidaccess "(3),
+.BR credentials "(7), " path_resolution "(7)
 .SH VAROVÁNÍ
-Překlad je pravděpodobně zastaralý. Pokud chcete pomoci s jeho aktualizací, zamiřte na http://man-pages-cs-wiki.homelinux.net/
+Tato stránka je součástí projektu Linux \fIman-pages\fP ve verzi 3.19.
+Popis projektu a informace o oznamování chyb je možno nalézt
+na http://www.kernel.org/doc/man-pages/.
diff -urN man-pages-cs-0.18.20090209-orig/man-pages/man4/mouse.4 man-pages-cs-0.18.20090209/man-pages/man4/mouse.4
--- man-pages-cs-0.18.20090209-orig/man-pages/man4/mouse.4	2009-11-27 16:40:59.000000000 +0100
+++ man-pages-cs-0.18.20090209/man-pages/man4/mouse.4	2009-11-27 16:41:30.000000000 +0100
@@ -40,16 +40,12 @@
 .TS
 center;
 r c l.
-pin	jméno	použití
-
-2	RX	Data
-3	TX	\-12 V, Imax = 10 mA
-
-4	DTR	+12 V, Imax = 10 mA
-
-7	RTS	+12 V, Imax = 10 mA
-
-5	GND	Zem
+pin    jméno    použití
+2    RX    Data
+3    TX    \-12 V, Imax = 10 mA
+4    DTR    +12 V, Imax = 10 mA
+7    RTS    +12 V, Imax = 10 mA
+5    GND    Zem
 .TE
 
 To je specifikace, ve skutečnosti vystačí většina myší s 9 V.
@@ -68,16 +64,11 @@
 .TS
 center;
 l l.
-bitů/s	řetězec
-
-9600	*q
-
-4800	*p
-
-2400	*o
-
-1200	*n
-
+bitů/s    řetězec
+9600    *q
+4800    *p
+2400    *o
+1200    *n
 .TE
 
 První bajt z datového paketu může být určen k synchronizačním
@@ -91,10 +82,10 @@
 .TS
 center;
 r c c c c c c c.
-bajt	d6	d5	d4	d3	d2	d1	d0
-1	1	lb	rb	dy7	dy6	dx7	dx6
-2	0	dx5	dx4	dx3	dx2	dx1	dx0
-3	0	dy5	dy4	dy3	dy2	dy1	dy0
+bajt    d6    d5    d4    d3    d2    d1    d0
+1    1    lb    rb    dy7    dy6    dx7    dx6
+2    0    dx5    dx4    dx3    dx2    dx1    dx0
+3    0    dy5    dy4    dy3    dy2    dy1    dy0
 .TE
 .SS "3\-tlačítkový Microsoft protokol"
 Původní myš Microsoft měla pouze dvě tlačítka. Nyní jsou již i
@@ -120,12 +111,12 @@
 .TS
 center;
 r c c c c c c c c.
-bajt	d7	d6	d5	d4	d3	d2	d1	d0
-1	1	0	0	0	0	lb	mb	rb
-2	0	dxa6	dxa5	dxa4	dxa3	dxa2	dxa1	dxa0
-3	0	dya6	dya5	dya4	dya3	dya2	dya1	dya0
-4	0	dxb6	dxb5	dxb4	dxb3	dxb2	dxb1	dxb0
-5	0	dyb6	dyb5	dyb4	dyb3	dyb2	dyb1	dyb0
+bajt    d7    d6    d5    d4    d3    d2    d1    d0
+1    1    0    0    0    0    lb    mb    rb
+2    0    dxa6    dxa5    dxa4    dxa3    dxa2    dxa1    dxa0
+3    0    dya6    dya5    dya4    dya3    dya2    dya1    dya0
+4    0    dxb6    dxb5    dxb4    dxb3    dxb2    dxb1    dxb0
+5    0    dyb6    dyb5    dyb4    dyb3    dyb2    dyb1    dyb0
 .TE
 
 Bajty 4 a 5 popisují změny, které nastaly od vyslání bajtů 2 a 3.
@@ -142,13 +133,13 @@
 .TS
 center;
 r c c c c c c c c.
-bajt	d7	d6	d5	d4	d3	d2	d1	d0
-1	1	0	0	dxs	dys	lb	mb	rb
-2	0	dx6	dx5	dx4	dx3	dx2	dx1	dx0
-3	0	dy6	dy5	dy4	dy3	dy2	dy1	dy0
+bajt    d7    d6    d5    d4    d3    d2    d1    d0
+1    1    0    0    dxs    dys    lb    mb    rb
+2    0    dx6    dx5    dx4    dx3    dx2    dx1    dx0
+3    0    dy6    dy5    dy4    dy3    dy2    dy1    dy0
 .TE
 .SH SOUBORY
-.TP 
+.TP
 \fI/dev/mouse\fP
 často používaný symbolický odkaz na skutečné zařízení myši.
 .SH "DALŠÍ INFORMACE"
@@ -156,3 +147,4 @@
 .SH TIRÁŽ
 Tato stránka je součástí projektu Linux \fIman\-pages\fP.  Popis projektu a
 informace o hlášení chyb najdete na http://www.kernel.org/doc/man\-pages/.
+
diff -urN man-pages-cs-0.18.20090209-orig/man-pages/man5/passwd.5 man-pages-cs-0.18.20090209/man-pages/man5/passwd.5
--- man-pages-cs-0.18.20090209-orig/man-pages/man5/passwd.5	2009-02-09 01:15:10.000000000 +0100
+++ man-pages-cs-0.18.20090209/man-pages/man5/passwd.5	2009-11-27 16:48:41.000000000 +0100
@@ -31,7 +31,8 @@
 .\" This file was generated with po4a. Translate the source file.
 .\"
 .\"*******************************************************************
-.TH PASSWD 5 1998\-01\-05 Linux "Linux \- příručka programátora"
+.\" Aktualizováno podle man-pages-3.09-2 z distribuce Fedora 10
+.TH PASSWD 5 2009\-24\-11 Linux "Linux \- příručka programátora"
 .SH JMÉNO
 passwd \- seznam hesel uživatelů
 .SH POPIS
@@ -69,17 +70,17 @@
 .TP  1.0in
 \fIjméno_účtu\fP
 jméno uživatele systému. Nemělo by obsahovat velká písmena.
-.TP 
+.TP
 \fIheslo\fP
 zašifrované heslo uživatele, hvězdička (*) nebo písmeno \(aqx\(aq.
 (Viz \fBpwconv\fP(8)  pro vysvětlení \(aqx\(aq.)
-.TP 
+.TP
 \fIUID\fP
 číselná identifikace uživatele (user ID)
-.TP 
+.TP
 \fIGID\fP
 číselná identifikace skupiny (group ID)
-.TP 
+.TP
 \fIGECOS\fP
 Toto pole je volitelné a má jen informativní význam. Obvykle obsahuje
 celé jméno uživatele. GECOS znamená General Electric Comprehensive
@@ -88,10 +89,10 @@
 poslali tiskový výstup nebo dávku úloh GCOS serveru. Pole gcos v souboru
 hesel se používalo k uskladnění informací pro $IDENTcard. Nebylo to
 elegantní."
-.TP 
+.TP
 \fIadresář\fP
 domovský adresář uživatele ( \fB$HOME\fP)
-.TP 
+.TP
 \fIshell\fP
 program, který je spuštěn po úspěšném přihlášení (jestliže je
 prázdný, použije se \fI/bin/sh\fP).  Pokud je nastaven na neexistující
@@ -117,3 +118,4 @@
 .SH TIRÁŽ
 Tato stránka je součástí projektu Linux \fIman\-pages\fP.  Popis projektu a
 informace o hlášení chyb najdete na http://www.kernel.org/doc/man\-pages/.
+
diff -urN man-pages-cs-0.18.20090209-orig/nfs-utils/exports.5 man-pages-cs-0.18.20090209/nfs-utils/exports.5
--- man-pages-cs-0.18.20090209-orig/nfs-utils/exports.5	1999-05-31 19:28:34.000000000 +0200
+++ man-pages-cs-0.18.20090209/nfs-utils/exports.5	2009-11-27 16:57:41.000000000 +0100
@@ -1,4 +1,5 @@
-.TH EXPORTS 5 "2. května 1998"
+.\" Aktualizováno podle nfs-utils-1.1.4-1 z distribuce Fedora 10
+.TH EXPORTS 5 "27. listopadu 2009"
 .do hla cs
 .do hpf hyphen.cs
 .UC 5
@@ -10,10 +11,9 @@
 Soubor
 .I /etc/exports
 definuje přístupová práva pro souborové systémy, které mohou
-být exportovány NFS klientům. Je používán jak NFS mount démonem,
-.BR (mountd (8))
-tak i NFS server démonem
-.BR (nfsd (8)).
+být exportovány NFS klientům. Je používán programem \fIexportfs\fP(8)
+pro předávání informací jak NFS mount démonu \fImountd\fP(8),
+tak i NFS server démonu \fInfsd\fP(8).
 .PP
 Formát souboru je podobný formátu souboru
 .I exports
@@ -23,28 +23,252 @@
 jménu počítače je možno připojit seznam připojovacích parametrů v
 závorkách.  Prázdné řádky jsou ignorovány a znak # uvozuje komentář až
 do konce řádku.
+.sp
+Každý řádek také může mít jednu nebo více specifikací implicitního
+nastavení za jménem cesty v podobě pomlčky ("-") následované
+seznamem voleb. Tento seznam voleb je použit pro všechny následující
+exporty daného řádku.
+
+Prázdné řádky jsou ignorovány. Znak mříže ("#") uvozuje komentář a platí do konce
+řádku. Jednotlivé položky mohou pokračovat na novém řádku použitím zpětného
+lomítka. Pokud exportované jméno obsahuje mezery, mělo by být uvozeno
+dvojitými uvozovkami. Můžete také specifikovat mezery a jiné speciální znaky
+v exportovaném jméně pomocí zpětného lomítka následovaného číslem znaku v
+podobě tří číslic v osmičkové soustavě.
+
+Pro uložení změn v tomto souboru spusťte exportfs -ra nebo restartujte
+NFS server.
+
+.PP
+.SS Formát jména počítače
+.TP
+NFS klienti mohou být specifikováni několika způsoby:
+.sp
+.TP
+jeden host
+Toto je nejčastěji používaný formát. Hosta lze specifikovat buď zkráceným
+jménem rozeznávaným resolverem plným doménovým jménem nebo IP adresou.
+.sp
+.TP
+netgroups
+NIS netgroups mohou být zadány jako \fI@group\fP. Při kontrole
+členství je kontrolováno pouze jméno hosta. Prázdná jména hosta a jména
+obsahující pomlčku (-) jsou ignorovány.
+.sp
+.TP
+zástupné znaky
+Jména strojů mohou obsahovat zástupné znaky \fI*\fP a \fI?\fP. Toho lze
+výhodně využít pro zmenšení velikosti \fIexports\fP souboru. Například
+\fI*.cs.foo.edu\fP označuje všechny hosty v doméně \fIcs.foo.edu\fP.
+Jelikož tyto znaky zastupují i tečky v doménovém jméně, daný vzor bude
+odpovídat i doméně \fIcs.foo.edu\fP.
+.sp
+.TP
+IP sítě
+Můžete také exportovat všem hostům na dané IP (pod)síti najednou.
+Toho lze dosáhnout pomocí specifikace dvojice IP adresa a maska sítě
+\fIadresa/maska\fP kde maska může být specifikována jako dotted
+decimal nebo délkou masky (např. hodnoty '/255.255.252.0' nebo '/22'
+připojené za adresu sítě povede k identickým podsítím s desetibitovou
+adresou hosta). Zástupné znaky nefungují u IP adres, ačkoliv mohou
+náhodně fungovat pokud selže reverzní DNS vyhledávání.
+.sp
+.PP
+.SS RPCSEC_GSS bezpečnost
+Speciální řetězce "gss/krb5", "gss/krb5i" nebo "gss/krb5p" lze použít pro
+omezení přístupu ke klientům za použití rpcsec_gss. Nicméně tato syntaxe je
+zastaralá. V linuxových jádrech od verze 2.6.23 by mělo být používáno
+exportní nastavení "sec="
+.sp
+.TP
+.I sec=
+Volba sec= následovaná seznamem bezpečnostních flagů oddělených dvojtečkami,
+zpřísňuje export ke klientům, kteří používají tyto flagy. Dostupná bezpečností
+nastavení zahrnují sys (implicitní nastavení - žádná kryptografická ochrana),
+krb5 (pouze autentizace), krb5i (ochrana integrity) a krb5p (privacy protection).
+Záleží na pořadí specifikace flagů: preferované flagy by měly být na předních
+místech. Na pořadí samotného sec= nezáleží, pokud nemusí být ostatní parametry
+na předních místech kvůli vynucení provedení. V tom případě lze vložit několik
+sec= sekcí.
+
 .PP
 .SS Základní přepínače
+\fIexportfs\fP rozeznává následující exportní nastavení:
+.sp
 .TP
-.IR secure "\*d"
+.I secure
 Tento přepínač vyžaduje, aby připojení vycházelo z portu s číslem menším
 než IPPORT_RESERVED (1024). Toto je standardní nastavení. Pro jeho změnu
 zadejte
 .IR insecure .
 .TP
-.IR ro
-Povoluje přístup pouze pro čtení pro toto připojení. Standardně je povolen
-přístup i pro zápis. Ten je možno explicitně uvést pomocí přepínače
-.IR rw .
-.TP
-.IR link_relative
-Konvertuje absolutní symbolické odkazy (tj. ty, které začínají lomítkem)
-na relativní přidáním správného počtu ../ na začátek, abychom se posunuli
-z adresáře s odkazem do kořene serveru. Tento přepínač má význam pouze
-tehdy, není-li souborový systém připojen jako kořen.
-.TP
-.IR link_absolute
-Odkazům se ponechává jejich původní význam. Toto je standardní nastavení.
+.IR rw
+Povoluje jak čtení tak zápis na tomto NFS zařízení. Implicitně není povolen
+žádný požadavek, který mění stav souborového systému. Toho lze dosáhnout
+pomocí nastavení \fIro\fP.
+.TP
+.IR async
+Toto nastavení dovoluje NFS serveru neposlechnout NFS protokol a
+odpovědět na požadavek dříve, než byly jakékoliv změny provedené
+daným požadavkem uloženy (např. na
+disk).
+
+Použití tohoto nastavení obvykle zlepšuje výkonnost, ale za cenu, že
+při nečistém restartu serveru (například při pádu) se mohou ztratit
+nebo poškodit data
+.TP
+.IR sync
+Odpoví na dotaz až když jsou změny promítnuty do stabilního úložiště
+(viz \fIasync\fP výše.)
+V nfs-utils do verze 1.0.0 včetně bylo toto nastavení implicitní. Od verze
+1.0.0 je \fIsync\fP implicitní nastavení a \fIasync\fP musí být explicitně
+specifikováno. Aby si byly administrátoři vědomi
+této změny, tak program 'exportfs' vypíše varovnou hlášku v případě, že není
+specifikováno ani \fIsync\fp ani \fIasync\fp.
+.TP
+.IR no_wdelay
+Toto nastavení nemá žádný efekt, je-li nastaveno i \fIasync\fP. NFS server
+totiž běžně zpozdí provedení požadavku o zápis na disk pokud se domnívá, že
+další podobný požadavek o zápis je již zpracováván nebo brzy přijde. Toto
+umožňuje provedení několik požadavků na zápis najednou, což může zlepšit
+výkon. Pokud NFS server vyřizuje malé nesouvisející požadavky, pak toto
+nastavení může naopak výkon snížit, takže volba \fIno_wdelay\fP je možno
+použít pro vypnutí. Implicitního nastavení lze dosáhnout pomocí volby
+\fIwdelay\fP.
+.TP
+.IP nohide
+Tato volba je založena no volbě z IRIX NFS nesoucí stejné jméno. Běžně pokud
+server exportuje dva systémy souborů přičemž jeden je připojený do druhého,
+tak klient musí explicitně připojit oba systémy souborů, aby k nim získal
+přístup. Pokud se připojí pouze rodičovský souborový systém, pak bude vidět
+pouze prázdný adresář v místě, kde má být připojen druhý systém. Ten je totiž
+skrytý.
+
+Nastavením volby \fInohide\fP způsobí, že tento souborový systém nebude skrytý
+a klient s dostatečnými právy bude moci přecházet z rodičovského souborového
+systému do systému podřízeného bez toho, aby zaznamenal jakoukoli změnu.
+
+Nicméně někteří NFS klienti si nedokáží dost dobře v takovéto situaci poradit.
+Například je možné, že dva soubory v jednom souborovém systému budou mít
+stejné číslo inodu.
+
+Volba \fInohide\fP je momentálně efektivní pouze při exportu na \fIjednoho
+osta\fP. Nefunguje spolehlivě při exportu internetové skupiny, podsítě ani
+za použití zástupných znaků.
+
+Tato volba může být v některých situacích velmi užitečná, nicméně by měla být
+používána obezřetně a po ověření, že klient zvládá situaci bez problémů.
+
+Tato volba může být zrušena pomocí \fIhide\fP.
+.TP
+.IR crossmnt
+Tato volba je podobná \fInohide\fP, ale umožňuje klientovi přesunout se ze
+systému označeného crossmnt do exportovaného systému, který je do něj
+připojen. Takže pokud synovský souborový systém "B" je připojen do rodičovského
+systému "A", pak nastavení crossmnt na "A" má stejný efekt jako nastavení nohide
+na "B".
+.TP
+.IR no_subtree_check
+Tato volba znemožní kontrolu podstromů což má sice mírné bezpečností důsledky,
+ale může to zlepšit spolehlivost za určitých podmínek.
+
+Pokud je podadresář souborového systému exportován, ale celý souborový systém
+nikoli, pak vždy když dorazí NFS požadavek, tak server musí kontrolovat nejen
+přítomnost souboru v daném souborovém systému (což je snadné), ale také zda
+je soubor v exportovaném stromě (což je složitější). Takováto kontrola je nazvána
+\fIkontrola podstromu\fP.
+
+Aby mohla být tato kontrola provedena, musí server poskytnout informace o místě,
+kde je soubor uložen ve "filehandle", který je poslán klientovi. Toto může
+způsobit problémy s přístupem k souborům, které jsou přejmenovány zatímco je má klient otevřené (ačkoli v některých jednoduchých případech to stále funguje).
+
+Kontrola podstromu je také často používána pro ověření, že soubory, které jsou
+v adresářích ke kterým má přístup pouze root, jsou přístupné pouze když je
+souborový systém exportován s \fIno_root_squash\fP (viz níže), i když soubor sám
+může povolovat přístup i ostatním.
+
+Obecně lze říci, že souborový systém domovského adresáře, který je běžně exportován
+jako root a může se v něm vyskytnout mnoho přejmenování, by měl být exportován bez
+kontroly podstromů. Na druhou stranu souborový systém, který je pouze pro čtení a
+neočekává se přinejmenším velké množství přejmenování (např. /usr nebo /var) a pro něž
+je možný export podadresářů, mohou být exportovány s kontrolou podstromů.
+
+povolení kontroly podstromů lze zapnout pomocí \fIsubtree_check\fP.
+
+Od verze 1.1.0 včetně je defaultní nastavení \fIno_subtree_check\fP, protože
+kontrola podstromů většinou nadělá více škody než užitku. Pokud na kontrole
+podstromů trváte měli by jste explicitně uvést tuto volbu v
+.B exports
+souboru. Pokud nezadáte žádnou volbu budete na to upozorněni.
+.TP
+.IR insecure_locks
+.TP
+.IR no_auth_nlm
+Tato volba (dvě výše uvedená jména jsou ekvivalentní) říká NFS serveru, aby nevyžadoval
+autentizaci blokujících požadavků (například požadavků, které používají NLM protokol).
+Za normálních podmínek bude NFS server vyžadovat, aby měl blokující požadavek údaje od
+uživatele, který má práva na čtení daného souboru. Pokud je však nastavena tato volba pak
+takováto kontrola nebude prováděna.
+
+První implementace NFS klientů neposkytovaly uživatelské údaje blokujícím požadavkům a dnes
+ještě stále existuje mnoho NFS klientů, kteří jsou založeni na starých implementacích.
+Použijte tuto volbu pokud zjistíte, že máte problému s uzamykáním souborů.
+
+Běžné chování znamenající vyžadování autentizace for NLM požadavku může být explicitně
+vynuceno jedním z příkazů \fiauth_nlm\fP nebo \fIsecure_locks\fP.
+.TP
+.IR no_acl
+Na některých speciálně patchovaných kernelech a při exportu souborových systémů podporujících
+ACL říká tato volba nfs démonovi, aby neodhaloval ACL klientům, takže klienti budou vidět pouze
+podmnožinu povolení na daném souborovém systému. Tato volba je bezpečná pro souborové systémy
+používané NFSv2 a staršími NFSv3 klienty, kteří rozhodují o přístupu lokálně. Noví NFSv3
+klienti používají ACCESS RPC pro rozhodování o přístupu k serveru.  Je důležité vědět, že volba
+\fIno_acl\fP má efekt pouze u kernelů, které jsou speciálně patchované a při exportu souborového
+systému podporujícího ACL. Bežně se exportuje s ACL (takže \fIno_acl\fP je vypnuté).
+.TP
+.IR "mountpoint="cesta
+.TP
+.IR mp
+Tato volba dovoluje exportovat pouze adresář, který již byl úspěšně připojen. Pokud není zadána
+žádná cesta (například \fImountpoint\fp nebo \fImp\fP) pak exportní bod musí být také bodem
+připojení. Pokud tomu tak není, pak exportní bod není exportován. Toto zajišťuje, že adresář,
+který je ve struktuře pod bodem připojení, nebude náhodně exportován, pokud se například vyskytne
+chyba disku při připojování.
+
+Pokud je zadána cesta (například \fImountpoint=\fP/cesta nebo \fImp=\fP/cesta) pak zadaná  cesta
+musí být připojovacím bodem kam bude exportován bod exportu.
+.TP
+.IR "fsid=" num|root|uuid
+NFS musí být schopen identifikovat každý souborový systém, který exportuje. Za běžných okolností
+použije UUID souborového systému (pokud souborový systém nějaké UUID má) nebo číslo zařízení na
+kterém se souborový systém nachází(pokud je souborový systém uložen na zařízení).
+
+Jelikož ne všechny souborové systémy jsou uložené na zařízeních a zdaleka ne všechny souborové
+systémy mají UUID, je někdy nutné říci NFS jak má daný souborový systém identifikovat. K tomu
+slouží volba \fIfsid=\fP.
+
+V NFSv4 existuje speciální souborový systém, který je kořenem pro všechny exportované
+souborové systémy. To je určeno pomocí \fIfsdi=0\fP nebo \fIfsid=root\fP. Obě volby
+znamenají přesně to samé.
+
+Jiné souborové systémy mohou být identifikovány malým celým číslem (small integer) nebo
+pomocí UUID, které by mělo obsahovat 32 hexadecimálních číslic a příslušnou interpunkci.
+
+Linuxová jádra až do verze 2.6.20 neumí pracovat s UUID a proto musí být pro identifikaci
+použito malého celého čísla, v případě, že je to třeba. Je povoleno nastavit identifikaci
+pomocí UUID a čísla, takže stejná konfigurace může pracovat jak na starém tak i na
+novém kernelu.
+.TP
+.IR "refer="path@host[+host][:path@host[+host]]
+Klient odkazující se na exportní bod bude vyzván, aby vybral z nabízeného listu
+alternativních lokací pro souborový systém. (Je důležité vědět, že musí mít
+vlastní bod připojení, tak aby nebyl vyžadován jiný souborový systém, například
+\fImount -- bind\fP /path /path je dostačující.)
+.TP
+.IR "replicas="path@host[+host][:path@host[+host]]
+Pokud klient žádá alternativní lokalitu pro svůj exportní bod, bude mu poskytnut seznam
+alternativ. (Je důležité vědět, že samotnou replikaci souborového systému je třeba
+ošetřit jinde.)
 .SS Mapování uživatelských identifikací
 .PP
 .I nfsd
@@ -56,7 +280,7 @@
 .PP
 Velmi často není vhodné, aby uživatel root na jednom počítači byl také
 rootem, když přistupuje na soubory na NFS serveru. Proto se uid 0 obvykle
-mapuje na jiné uid zvané anonymní nebo 
+mapuje na jiné uid zvané anonymní nebo
 .I nobody .
 Tento mód je standardní (nazývá se root squashing) a lze jej vypnout
 pomocí
@@ -72,9 +296,9 @@
 Navíc nfsd umožňuje nastavit mapování dalších uid a gid na uživatele nobody.
 Mapování všech na nobody lze nastavit přepínačem
 .IR all_squash .
-.PP 
-Aby bylo možno dynamicky nastavit mapování lokálních a vzdálených 
-uid a gid použijte 
+.PP
+Aby bylo možno dynamicky nastavit mapování lokálních a vzdálených
+uid a gid použijte
 .I nfsd
 přepínač
 .I map_daemon ,
@@ -86,44 +310,24 @@
 .TP
 .IR root_squash
 Mapuje požadavky uid/gid 0 na anonymní uid/gid. Všimněte si, že se to netýká
-jiných stejně citlivých uživatelů, jako je např. 
+jiných stejně citlivých uživatelů, jako je např.
 .IR bin .
 .TP
 .IR no_root_squash
 Vypíná root_squash. Obvykle je vhodný pro bezdiskové stanice.
-.TP
-.IR squash_uids " a " squash_gids
-Seznam uid/gid, které se mají také mapovat na anonymního uživatele.
-Správný seznam vypadá např. takto:
-.IP
-squash_uids=0-15,20,25-50
-.IP
-Obvykle je však tento seznam jednodušší:
-.IP
-squash_uids=0-100
 .IP
 .TP
 .IR all_squash
 Mapuje všechny uživatele na anonymního. Lze jej s výhodou použít na
 NFS-export veřejných FTP stromů či jiných veřejně sdílených adresářů.
-Vypíná se pomocí 
+Vypíná se pomocí
 .IR no_all_squash ,
 což je standardní nastavení.
 .TP
-.IR map_daemon
-Tento přepínač zapíná dynamické mapování uid a gid. Každý požadavek
-je přeložen do odpovídajícího serverového uid/gid a každá odpověď
-zase obráceně. Vyžaduje, aby byl démon
-.BR rpc.ugidd (8)
-spuštěn na straně klienta. Standardně je nastaveno
-.IR map_identity ,
-které ponechává všechna uid beze změny. Přitom se však v každém 
-případě použije nastavení přepínačů sqash, které mají přednost.
-.TP
 .IR anonuid " a " anongid
-Tyto přepínače explicitně nastavují anonymní uid a gid. Primární použití 
+Tyto přepínače explicitně nastavují anonymní uid a gid. Primární použití
 je pro PC/NFS klienty, kde se může každý požadavek jevit, jako byl přišel
-od jediného klienta. Jako příklad uveďme export pro 
+od jediného klienta. Jako příklad uveďme export pro
 .I /home/joe
 v příkladech dole, které mapuje každý požadavek na uid 150 (o kterém se
 předpokládá, že patří uživateli joe).
@@ -150,38 +354,15 @@
 adresář libovolnému počítači, přičemž všechny požadavky jsou prováděny
 jako uživatel nobody.
 Přepínač
-.I insecure 
+.I insecure
 dovoluje připojit klienty, kteří nepoužívají porty rezervované pro NFS.
-.SH UPOZORNĚNÍ
-Na rozdíl od jiných implementací NFS serveru tento
-.B nfsd
-démon dovoluje exportovat adresář i podadresáře témuž klientovi, např.
-.IR /usr " a " /usr/X11R6 .
-V tomto případě se použijí přepínače, které jsou nejblíže. Dejme tomu, že
-klient přistupuje na soubor v 
-.IR /usr/X11R6 ,
-pak se uplatní přepínače pro 
-.I /usr/X11R6 .
-Toto platí v případě, že jsou tyto přepínače definovány maskou nebo pro
-síťovou skupinu.
 .SH SOUBORY
 .TP
-.I /etc/exports
-Konfigurační soubor pro  
-.BR nfsd (8).
-.TP
-.I /etc/passwd
-Soubor hesel.
-.SH DIAGNOSTIKA
-Chyba v tomto souboru je hlášena pomocí 
-.BR syslogd (8)
-jako úroveň NOTICE až DAEMON kdykoli je 
-.BR nfsd (8)
-nebo
-.BR mountd (8)
-spuštěn.
+.I /etc/exports(8)
 .SH VIZ TÉŽ
+.BR exportfs (8),
+.BR netgroup (5),
 .BR mountd (8),
 .BR nfsd (8),
-.BR nfs (5),
-.BR passwd (5).
+.BR showmount (5).
+

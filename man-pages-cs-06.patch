diff -ur man-pages-cs-0.18.20090209-orig/man-pages/man2/send.2 man-pages-cs-0.18.20090209/man-pages/man2/send.2
--- man-pages-cs-0.18.20090209-orig/man-pages/man2/send.2	1999-05-31 19:28:28.000000000 +0200
+++ man-pages-cs-0.18.20090209/man-pages/man2/send.2	2009-10-08 10:16:16.000000000 +0200
@@ -1,4 +1,5 @@
-.TH SEND 2 "2. července 1997" "BSD Man Page" "Linux - příručka programátora"
+.\" Aktualizováno podle man-pages-3.09-2 z distribuce Fedora 10
+.TH SEND 2 "5 října 2009" "BSD Man Page" "Linux - příručka programátora"
 .do hla cs
 .do hpf hyphen.cs
 .SH JMÉNO
@@ -8,111 +9,284 @@
 .br
 .B #include <sys/socket.h>
 .sp 2
-.BI "int send(int " s ", const void *" msg ", int " len ","
-.BI "unsigned int " flags );
+.BI "ssize_t send(int " s ", const void *" msg ", size_t " len ",int " flags " );
 .sp
-.BI "int sendto(int " s ", const void *" msg ", int " len ","
-.BI "unsigned int " flags ", const struct sockaddr *" to ", int " tolen );
+.BI "ssize_t sendto(int " s ", const void *" msg ", size_t " len ",int " flags ",
+              \fBconst struct sockaddr *\fP \fIto\fP \fB, socklen_t\fP \fItolen\fP \fB);\fP
 .sp
-.BI "int sendmsg(int " s ", const struct msghdr *" msg ","
-.BI "unsigned int " flags );
+.BI "ssize_t sendmsg(int " s ", const struct msghdr *" msg ", int " flags " );
 .SH POPIS
-.BR Send ,
-.BR sendto ,
+\fBSend\fP() ,
+\fBsendto\fP() ,
 a
-.B sendmsg
+\fBsendmsg\fP()
 se používají k zasílání zpráv do jiných soketů.
+
+
 .B Send
 může být použito pouze, je-li soket
 .I spojený
-zatímco
-.B sendto
-a
-.B sendmsg
-mohou být použity kdykoliv.
+(takže je znám příjemce zprávy).
+Jediný rozdíl mezi \fBsend\fP() a \fBwrite\fP(2)
+je přítomnost \fIflagů\fP. Pokud je proměnná \fIflag\fPy
+v \fBsend\fP() je to ekvivalentní s voláním \fBwrite\fP(2).
+send(s,buf,len,flags)
+je ekvivalentní sendto(s,buf,len,flags, NULL,0).
 
-Adresa cílového soketu je zadána parametrem
+Parametr \fIs\fP je deskriptor odesílajícího soketu.
+
+Pokud je \fBsendto\fP() použito ve spojovaném módu
+(\fBSOCK_STREAM, SOCK_SEQPACKET\fP) jsou parametry
 .I to
 a
 .I tolen
-specifikuje jeho velikost. Adresa zprávy je zadána v argumentu
-.IR len .
-Je-li zpráva příliš dlouhá, aby mola být poslána atomicky, je vrácena chyba
-.B EMSGSIZE
+ignorovány(a chyba \fBEISCONN\fP může být vrácena,
+pokud nejsou NULL a 0) a chyba \fBENOTCONN\fP je vrácena,
+pokud nebyl soket připojen. Jinak je adresa cíle dána v
+.I to
+a
+.I tolen
+specifikuje jeho velikost. Pro \fBsendmsg\fP()
+je adresa zadána pomocí
+.I msg.msg_name
+a
+.I msg.msg_namelen
+specifikuje jeho velikost.
+
+Pro \fBsend\fP() a \fBsendto\fP() je zpráva uložena v
+.I buf
+a má délku
+.I len
+.
+Pro \fBsendmsg\fP() je zpráva indexována jednotlivými prvky pole
+.I msg.msg_iov. Volání \fBsendmsg\fP() umožňuje také posílat
+přidružená data (známá také jako kontrolní informace).
+
+Pokud je zpráva příliš dlouhá na to, aby prošla atomicky
+skrze protokol nižší vrstvy, je vrácena chyba \fBEMGSIZE\fP
 a zpráva není poslána.
 
 Funkce send neposkytuje žádnou možnost indikace správného doručení.
 Lokálně detekované chyby jsou indikovány návratovou hodnotou \-1.
 
-Pokud není k dispozici žádné volné místo pro zprávu před jejím přenosem,
-.B send
-se normálně zablokuje, pokud soket není v neblokujícím módu.
-Volání
-.BR select (2)
-může být použito k zjištění, je-li možno poslat další data.
+Pokud se zpráva nevejde do výstupního bufferu soketu, pak \fBsend\fP()
+za běžných okolností tuto zprávu blokuje, pokud ovšem není nastaven
+neblokující I/O mód. V neblokujícím módu je v takovém případě vrácena
+hodnota
+.B EAGAIN
+.
+Funkce \fBselect\fP(2) může být zavolána, aby určila, kdy je možné
+zasílat další data.
 
 Parametr
 .I flags
-může obsahovat jednu nebo více z následujících hodnot:
+je buď bitový, nulový nebo sestává z více následujících flagů.
+.TP
+\fB MSG_CONFIRM\fP (pouze Linux 2.3+)
+Řekne linkové vrstvě, že nastal proces přeposlání:
+obdrželi jsme odpověď od druhé strany. Pokud toto
+linková vrstva nedostane, bude neustále cyklicky dotazovat
+souseda(například pomocí ARP). Platí pouze na
+.B SOCK_DGRAM
+a
+.B SOCK_RAW
+soketech a implementováno pouze pro IPv4 a IPv6. Pro více
+informací viz \fB arp\fP(7).
 
-.RS
-.nf
-#define	MSG_OOB        0x1  /* zpracuj out-of-band data */
-#define	MSG_DONTROUTE  0x4  /* obejdi routing, použij přímé rozhraní*/
-.fi
-.RE
+.TP
+\fB MSG_DONTROUTE
+Nepoužívej bránu pro odesílání paketu do jiné sítě.
+Posílej pakety pouze hostům, kteří jsou přímo připojeni k síti.
+Toto nastavení je obvykle používáno pouze diagnostickými
+a směrovacími programy. Definováno pouze pro rodiny, které směrují.
+Paketové sokety nesměrují.
+
+.TP
+\fB MSG_DONTWAIT\fP (od Linuxu 2.2)
+Umožňuje neblokující operace; pokud by operace blokovala
+je vráceno
+.B EAGAIN
+(Toto lze také povolit pomocí \fBO_NONBLOCK\fP v \fBF_SETFL fnctl\fP(2)).
+.TP
+\fB MSG_EOR\fP (od Linuxu 2.2)
+Ukončí záznam (pokud je tento parametr podporován jako například u soketů
+\fBSOCK_PAKET\fP).
+.TP
+\fB MSG_MORE\fP (od Linuxu 2.4.4)
+Volající má více dat k odeslání. Tento flag je používán s TCP sokety ke
+získání stejného efektu, jakého dosahuje parametr soketu \fBTCP_CORK\fP
+(viz \fBtcp\fP(7)) s tím rozdílem, že tento parametr může být nastaven
+pro každé volání.
 
-Flag
+Od Linuxu 2.6 je tento parametr podporován také pro sokety UDP a informuje kernel,
+aby všechna data, která mají nastaven tento příznak, byla zabalena do jednoho
+datagramu, který je poslán, když je provedeno volání, které nemá tento flag
+nastaven. (Viz parametr \fBUDP_CORK\fP, který je popsán v \fBudp\fP(7).)
+.TP
+\fB MSG_NOSIGNAL\fP (od Linuxu 2.2)
+Signál
+.B SIGPIPE
+nebude zaslán u proudově orientovaných soketů, když druhý konec ukončí
+spojení. Chyba \fBEPIPE\fP je však stále zasílána.
+.TP
 .B MSG_OOB
-je použit pro posílání 
+Posílá
 .I out-of-band
-dat do soketu, který to podporuje (např.
-.BR SOCK_STREAM );
-použitý protokol musí také podporovat
+data, pokud to daný soket povoluje(např. \fBSOCK_STREAM\fP); protokol
+nižší vrstvy musí také podporovat
 .I out-of-band
 data.
-.B MSG_DONTROUTE
-je normálně používáno pouze diagnostickými a routovacími programy.
 
-V
-.BR recv (2)
-je obsažen popis struktury
+
+Následuje definice
 .I msghdr
+struktury. Další detaily lze nalézt v \fBrecv\fP(2) a níže.
+.TP
+
+struct msghdr \ {
+    void            *msg_name  \  /*volitelná adresa*/
+    socklen_t         msg_namelen; \   /*velikost adresy*/
+    struct iovec  *msq_iov     \  /*pole*/
+.br
+    size_t       msg_iovlen \ /*členy msq_iov*/
+    void        *msg_control \  /*pomocná data*/
+    socklen_t     msg_controllen \ /*délka bufferu*/
+    int          msg_flags \ /*parametry příchozí zprávy*/
+.LP
+};
+
+Můžete poslat kontrolní informaci pomocí
+.I msg_control
+a
+.I msg_controllen.
+Maximální délka bufferu, kterou může kernel zpracovat je
+omezena pro každý soket pomocí
+.I net.core.opt-mem_max
+sysctl. Viz \fBsocket\fP(7).
+
+
 .SH NÁVRATOVÁ HODNOTA
 Volání vrací počet poslaných znaků, nebo \-1 pokud se objevila chyba.
 .SH CHYBY
+Toto jsou některé standardní chyby generované sokety.
+Nižší vrstvy však mohou generovat i jiné chyby. Pro
+jejich popis navštivte jejich manuálové stránky.
 .TP 0.8i
+.B EACCES
+(Pro unixové sokety, které jsou identifikovány pomocí cesty.)
+Právo zápisu je odmítnuto pro cílový soubor nebo právo na prohledávání
+je odmítnuto pro některý adresář v cestě. (Viz \fB path_resolution\fP(7).)
+.TP
+.B EAGAIN
+nebo
+.B EWOULDBLOCK
+.br
+Soket je označen jako neblokující a požadovaná operace by blokovala.
+.TP
 .B EBADF
 Byl specifikován neplatný deskriptor.
 .TP
-.B ENOTSOCK
-Argument
-.I s
-není soket
+.B ECONNRESET
+.br
+Spojení resetováno druhou stranou.
+.TP
+.B EDESTADDRREQ
+.br
+Soket se nenachází ve spojovaném módu a není nastavena žádná adresa.
 .TP
 .B EFAULT
 Parametr je v neplatné části adresového prostoru procesu.
 .TP
-.B EMSGSIZE
-Soket požaduje, aby tato zpráva byla poslána atomicky, ale velikost této
-zprávy toto znemožňuje.
+.B EINTR
+Objevil se signál dříve, než byla přenesena data. Viz \fBsignal\fP(7).
 .TP
-.B EWOULDBLOCK
-Soket je označen jako neblokující a požadovaná operace by blokovala.
+.B EINVAL
+Předán neplatný parametr.
 .TP
-.B ENOBUFS
-Systém není schopen alokovat interní buffery. Operace může být úspěšná až
-budou buffery k dispozici.
+.B EISCONN
+Pro již spojený soket byl specifikován další adresát. (Buď je
+vyvolána tato chyba nebo je další adresát ignorován.)
 .TP
+.B EMSGSIZE
+Soket požaduje, aby tato zpráva byla poslána atomicky, ale velikost této
+zprávy toto znemožňuje.
 .B ENOBUFS
 Výstupní fronta pro síťové rozhraní je zaplněna. To obvykle znamená, že
 rozhraní přestalo posílat, ale může to být také způsobeno občasným
 přetížením rozhraní.
+.TP
+.B ENOMEM
+Žádná dostupná paměť.
+.TP
+.B ENOTCONN
+.br
+Soket není spojený a nebyl dán žádný cíl.
+.TP
+.B ENOTSOCK
+Argument
+.I s
+není soket.
+.TP
+.B EOPNOTSUPP
+.br
+Některý bit v parametrech je nevhodný pro tento typ soketu.
+.TP
+.B EPIPE
+Lokální spojení bylo ukončeno na spojovaném soketu. V tom případě
+proces také obdrží
+.B SIGPIPE
+pokud není nastaveno
+.B MSG_NOSIGNAL
+
+
+
 .SH SPLŇUJE STANDARDY
-4.4BSD, SVr4 (tato volání se poprvé objevila ve 4.2BSD).  SVr4
-dokumentuje další chyby EINVAL, EINTR, EMSGSIZE, ENOSR, ENOMEM.
+4.4BSD, SVr4, POSIX.1-2001 Tato volání se poprvé objevila ve 4.2BSD.
+
+POSIX.1-2001 popisuje pouze příznaky
+.B MSG_OOB
+a
+.B MSG_EOR.
+Příznak
+.B MSG_CONFIRM
+je dostupný pouze v Linuxu.
+.SH POZNÁMKY
+Prototypy uvedené výše splňují Single Unix Specifikaci a glibc2 také.
+Parametr
+.I flags
+byl typu
+.I int
+v BSD 4.x, ovšem
+.I unsigned int
+v libc4 a libc5. Argument
+.I len
+byl v BSD 4.x a libc 4
+.I int
+, ovšem v libc5 je typu
+.I size_t
+argument
+.I tolen
+je typu
+.I int
+v 4.x BSD, libc4 i libc5. Viz \fB accept\fP(2).
+
+Dle normy POSIX.1-2001 pole
+.I msg_controllen
+ve struktuře
+.I maghdr
+by mělo být typu
+.I socklen_t
+, ale v aktuální verzi glibc(2.4) má typ
+.I size_t
+.SH CHYBY
+Linux by měl vrace \fBEPIPE\fP místo \fBENOTCONN\fP.
+.SH PŘÍKLAD
+Příklad použití \fBsendto\fP() je v \fBgetaddrinfo\fP(3).
+
 .SH DALŠÍ INFORMACE
-.BR fcntl "(2), " recv "(2), " select "(2), " getsockopt "(2), "
-.BR socket "(2), " write (2)
-.SH VAROVÁNÍ
-Překlad je pravděpodobně zastaralý. Pokud chcete pomoci s jeho aktualizací, zamiřte na http://man-pages-cs-wiki.homelinux.net/
+.BR fcntl "(2), "sendfile "(2), "shutdown "(2),  " recv "(2), " select "(2), " getsockopt "(2), "
+.BR socket "(2), " write "(2), " cmsg "(3), " ip "(7), " socket "(7), " tcp "(7), " udp "(7)
+.SH TIRÁŽ
+Tato stránka je součástí projektu Linux \fIman\-pages\fP.  Popis projektu a
+informace o hlášení chyb najdete na http://www.kernel.org/doc/man\-pages/.
+
diff -ur man-pages-cs-0.18.20090209-orig/man-pages/man3/acosh.3 man-pages-cs-0.18.20090209/man-pages/man3/acosh.3
--- man-pages-cs-0.18.20090209-orig/man-pages/man3/acosh.3	1999-05-31 19:28:29.000000000 +0200
+++ man-pages-cs-0.18.20090209/man-pages/man3/acosh.3	2009-10-08 10:17:34.000000000 +0200
@@ -1,26 +1,59 @@
-.TH ACOSH 3  "5.ledna 1997" "" "Linux - příručka programátora"
+.\" Aktualizováno podle man-pages-3.09-2 z distribuce Fedora 10
+.TH ACOSH 3  "6. října 2009" "" "Linux - příručka programátora"
 .do hla cs
 .do hpf hyphen.cs
 .SH JMÉNO
-acosh \- inverzní hyperbolický cosinus
+acosh, acoshf, acoshl \- inverzní hyperbolický cosinus
 .SH SYNTAXE
 .nf
 .B #include <math.h>
 .sp
 .BR "double acosh(double " x );
+.BR "float acoshf(float " x );
+.BR "long double acoshl(long double " x );
 .fi
+.sp
+Linkujte s \fI -lm\fP
+.fi
+.sp
+Vyžaduje Feature Test Makro pro glibc (viz \fBfeature_test_macros\fP(7)):
+.sp
+\fBatanh()\fP: _BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE >= 500
+|| _ISOC99_SOURCE; nebo \fIcc -std=c99\fP
+.br
+\fBatanhf\fP(), \fBatanhl\fP(): _BSD_SOURCE || _SVID_SOURCE ||
+_XOPEN_SOURCE >= 600 || _ISOC99_SOURCE; nebo \fIcc -std=c99\fP
 .SH POPIS
-Funkce \fBacosh()\fP počítá hodnotu inverzního hyperbolického cosinu čísla 
+Funkce \fBacosh()\fP počítá hodnotu inverzního hyperbolického cosinu čísla
 \fIx\fP; což je hodnota, jejíž hyperbolický cosinus je \fIx\fP.
-Je-li \fIx\fP menší než 1.0, \fBacosh()\fP vrací \fInot-a-number\fP (NaN)
-a nastaví proměnnou \fIerrno\fP .
+.SH NÁVRATOVÁ HODNOTA
+Při úspěchu vrací tato funkce inverzní hyperbolický kosinus \fIx\fP.
+.sp
+Je-li \fIx\fP NaN, je vráceno NaN.
+.sp
+Je-li \fIx\fP +1, je vráceno +0.
+.sp
+Je-li \fIx\fP plus nekonečno, je vráceno plus nekonečno.
+s matematicky korektním znaménkem.
+.sp
+Pokud je \fIx\fP menší než 1, vznikne doménová chyba a funkce vrátí
+NaN.
 .SH CHYBY
+Pro více informací zda funkce při svém volání generovala chybu viz
+\fB math_error\fP(7).
+.sp
+Mohou se objevit následující chyby:
+.sp
 .TP
-.B EDOM
-\fIx\fP není z definičního oboru.
+Doménová chyba: \fIx\fP je menší  +1
+\fIerrno\fP je nastaveno na
+.B EDOM.
+Je signalizována výjimka plovoucí čárky(\fBFE_INVALID\fP).
 .SH SPLŇUJE STANDARDY
 SVID 3, POSIX, BSD 4.3, ISO 9899
 .SH DALŠÍ INFORMACE
-.BR asinh "(3), " atanh "(3), " cosh "(3), " sinh "(3), " tanh (3)
-.SH VAROVÁNÍ
-Překlad je pravděpodobně zastaralý. Pokud chcete pomoci s jeho aktualizací, zamiřte na http://man-pages-cs-wiki.homelinux.net/
+.BR asinh "(3), " atanh "(3), " cacosh "(3), " cosh "(3), " sinh "(3), " tanh (3)
+.SH TIRÁŽ
+Tato stránka je součástí projektu Linux \fIman\-pages\fP.  Popis projektu a
+informace o hlášení chyb najdete na http://www.kernel.org/doc/man\-pages/.
+
diff -ur man-pages-cs-0.18.20090209-orig/man-pages/man3/atanh.3 man-pages-cs-0.18.20090209/man-pages/man3/atanh.3
--- man-pages-cs-0.18.20090209-orig/man-pages/man3/atanh.3	1999-05-31 19:28:30.000000000 +0200
+++ man-pages-cs-0.18.20090209/man-pages/man3/atanh.3	2009-10-08 10:18:32.000000000 +0200
@@ -1,26 +1,70 @@
-.TH ATANH 3  "5.ledna 1997" "" "Linux - příručka programátora"
+.\" Aktualizováno podle man-pages-3.09-2 z distribuce Fedora 10
+.TH ATANH 3  "6. října 2009" "" "Linux - příručka programátora"
 .do hla cs
 .do hpf hyphen.cs
 .SH JMÉNO
-atanh \- funkce inverzního hyperbolického tangens
+atanh, atanhf, atanhl \- funkce inverzního hyperbolického tangens
 .SH SYNTAXE
 .nf
 .B #include <math.h>
 .sp
 .BI "double atanh(double " x );
+.BI "float atanhf(float " x );
+.BI "lonf double atanh(long double " x );
+.sp
+Linkujte s \fI -lm\fP
 .fi
+.sp
+Vyžaduje Feature Test Makro pro glibc (viz \fBfeature_test_macros\fP(7)):
+.sp
+\fBatanh()\fP: _BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE >= 500
+|| _ISOC99_SOURCE; nebo \fIcc -std=c99\fP
+.br
+\fBatanhf\fP(), \fBatanhl\fP(): _BSD_SOURCE || _SVID_SOURCE ||
+_XOPEN_SOURCE >= 600 || _ISOC99_SOURCE; nebo \fIcc -std=c99\fP
+
+ 
 .SH POPIS
 Funkce \fBatanh()\fP počítá inverzní hyperbolický tangens \fIx\fP, což je
-hodnota, jejíž hyperbolický tangens je \fIx\fP. Je-li absolutní hodnota
-\fIx\fP větší než 1.0, funkce \fBacosh()\fP vrací \fInot-a-number\fP (NaN)
-a je nastavena proměnná \fIerrno\fP .
+hodnota, jejíž hyperbolický tangens je \fIx\fP.
+.SH NÁVRATOVÁ HODNOTA
+Při úspěchu vrací tato funkce inverzní hyperbolický tangens \fIx\fP.
+.sp
+Je-li \fIx\fP NaN, je vráceno NaN.
+.sp
+Je-li \fIx\fP +0 (-0), je vráceno +0 (-0).
+.sp
+Je-li \fIx\fP +1 nebo -1 je generována chyba a funkce vrátí
+.B HUGE_VAL,
+.B HUGE_VALF,
+nebo
+.B HUGE_VALL
+s matematicky korektním znaménkem.
+.sp
+Pokud je absolutní hodnota \fIx\fP větší než 1, je generována doménová chyba
+a návratová hodnota je NaN.
 .SH CHYBY
+Pro více informací zda funkce při svém volání generovala chybu viz
+\fB math_error\fP(7).
+.sp
+Mohou se objevit následující chyby:
+.sp
+.TP
+Doménová chyba: \fIx\fP je menší než -1 nebo větší než +1
+\fIerrno\fP je nastaveno na
+.B EDOM.
+Je signalizována výjimka plovoucí čárky(\fBFE_DIVBYZERO\fP).
 .TP
-.B EDOM
-\fIx\fP není z definičního oboru.
+Chyba míry: \fIx\fP je +1 nebo -1
+\fIerrno\fP je nastaveno na
+.B ERANGE
+(viz BUGS).Je signalizována výjimka plovoucí čárky(\fBFE_DIVBYZERO\fP).
 .SH SPLŇUJE STANDARDY
-SVID 3, POSIX, BSD 4.3, ISO 9899
+C99, POSIX.1-2001, Varianta vracející \fIdouble\fP také splňuje
+SVr4, 4.3BSD, C89.
 .SH DALŠÍ INFORMACE
-.BR asinh "(3), " acosh "(3), " cosh "(3), " sinh "(3), " tanh (3)
-.SH VAROVÁNÍ
-Překlad je pravděpodobně zastaralý. Pokud chcete pomoci s jeho aktualizací, zamiřte na http://man-pages-cs-wiki.homelinux.net/
+.BR asinh "(3), " acosh "(3), "catanh "(3), " cosh "(3), " sinh "(3), " tanh (3)
+.SH TIRÁŽ
+Tato stránka je součástí projektu Linux \fIman\-pages\fP.  Popis projektu a
+informace o hlášení chyb najdete na http://www.kernel.org/doc/man\-pages/.
+
diff -ur man-pages-cs-0.18.20090209-orig/man-pages/man3/atof.3 man-pages-cs-0.18.20090209/man-pages/man3/atof.3
--- man-pages-cs-0.18.20090209-orig/man-pages/man3/atof.3	1999-05-31 19:28:30.000000000 +0200
+++ man-pages-cs-0.18.20090209/man-pages/man3/atof.3	2009-10-08 10:19:34.000000000 +0200
@@ -1,4 +1,5 @@
-.TH ATOF 3  "6.ledna 1997" "GNU" "Linux - příručka programátora"
+.\" Aktualizováno podle man-pages-3.09-2 z distribuce Fedora 10
+.TH ATOF 3  "7. října 2009" "GNU" "Linux - příručka programátora"
 .do hla cs
 .do hpf hyphen.cs
 .SH JMÉNO
@@ -11,18 +12,20 @@
 .fi
 .SH POPIS
 Funkce \fBatof()\fP převádí úvodní část řetězce
-\fInptr\fP na číslo typu double. Její chování je stejné jako u funkce 
+\fInptr\fP na číslo typu \fIdouble\fP. Její chování je stejné jako u funkce
 .sp
 .RS
-.B strtod(nptr, (char **)NULL);
+strtod(nptr, (char **)NULL);
 .RE
 .sp
 kromě toho, že \fBatof()\fP nedetekuje žádné chyby.
 .SH NÁVRATOVÁ HODNOTA
 Převedené číslo.
 .SH SPLŇUJE STANDARDY
-SVID 3, POSIX, BSD 4.3, ISO 9899
+SVr4, POSIX.1-2001, 4.3BSD, C89, C99
 .SH DALŠÍ INFORMACE
 .BR atoi "(3), " atol "(3), " strtod "(3), " strtol "(3), " strtoul (3)
-.SH VAROVÁNÍ
-Překlad je pravděpodobně zastaralý. Pokud chcete pomoci s jeho aktualizací, zamiřte na http://man-pages-cs-wiki.homelinux.net/
+.SH TIRÁŽ
+Tato stránka je součástí projektu Linux \fIman\-pages\fP.  Popis projektu a
+informace o hlášení chyb najdete na http://www.kernel.org/doc/man\-pages/.
+
diff -ur man-pages-cs-0.18.20090209-orig/man-pages/man3/atol.3 man-pages-cs-0.18.20090209/man-pages/man3/atol.3
--- man-pages-cs-0.18.20090209-orig/man-pages/man3/atol.3	1999-05-31 19:28:31.000000000 +0200
+++ man-pages-cs-0.18.20090209/man-pages/man3/atol.3	2009-10-08 10:20:10.000000000 +0200
@@ -1,29 +1,55 @@
-.TH ATOL 3  "5.ledna 1997" "GNU" "Linux - příručka programátora"
+.\" Aktualizováno podle man-pages-3.09-2 z distribuce Fedora 10
+.TH ATOL 3  "6. října 2009" "GNU" "Linux - příručka programátora"
 .do hla cs
 .do hpf hyphen.cs
 .SH JMÉNO
-atol \- převádí řetězec na číslo typu long integer.
+atoi, atol, atoll, atoq \- převádí řetězec na integer.
 .SH SYNTAXE
 .nf
 .B #include <stdlib.h>
 .sp
+.BI "int atoi(const char *" nptr );
 .BI "long atol(const char *" nptr );
+.BI "long long atoll(const char *" nptr );
+.BI "long long atoq(const char *" nptr );
 .fi
+.sp
+Vyžaduje Feature Test Makro pro glibc (viz \fBfeature_test_macros\fP(7)):
+.sp
+\fBatoll()\fP: _BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE >= 600
+|| _ISOC99_SOURCE; nebo \fIcc -std=c99\fP
 .SH POPIS
-Funkce \fBatol()\fP převádí úvodní část řetězce
-\fInptr\fP na číslo typu long integer. Její chování je přibližně stejné jako
+Funkce \fBatoi()\fP převádí úvodní část řetězce
+\fInptr\fP na \fI integer\fP. Její chování je přibližně stejné jako
 u
 .sp
 .RS
-.B strtol(nptr, (char **)NULL, 10);
+strtol(nptr, (char **)NULL, 10);
 .RE
 .sp
-kromě toho, že \fBatol()\fP nedetekuje chyby.
+kromě toho, že \fBatoi()\fP nedetekuje chyby.
+.sp
+Funkce \fBatol\fP() a \fBatoll\fP() se chovají stejně jako \fBatoi\fP() s
+tím rozdílem, že převádí úvodní část řetězce na svůj návratový typ
+.I long
+nebo
+.I long long.
+Funkce \fBatoq\fP() je zastaralým názvem pro \fBatoi\fP().
+
 .SH NÁVRATOVÁ HODNOTA
 Převedená hodnota.
 .SH SPLŇUJE STANDARDY
-SVID 3, POSIX, BSD 4.3, ISO 9899
+SVr4, POSIX.1-2001, 4.3BSD, C99. C89 a POSIX.1-1996 zahrnují pouze funkce
+\fBatoi\fP() a \fBatol\fP(). Funkce \fBatoq\fP() je rozšíření GNU.
+.SH POZNÁMKY
+Nestandardní funkce \fBatoq\fP() již není přítomna v libc 4.6.27
+ani glibc2, ale je přítomna v libc5 a libc 4.7(ačkoli pouze jako
+inline funkce v \fI<stdlib.h>\fP od verze 5.4.44). Funkce
+\fBatoll\fP() je přítomna v glibc 2 od verze 2.0.2, ale ne v glibc4 a
+glibc5.
 .SH DALŠÍ INFORMACE
-.BR atof "(3), " atoi "(3), " strtod "(3), " strtol "(3), " strtoul (3)
-.SH VAROVÁNÍ
-Překlad je pravděpodobně zastaralý. Pokud chcete pomoci s jeho aktualizací, zamiřte na http://man-pages-cs-wiki.homelinux.net/
+.BR atof "(3), " strtod "(3), " strtol "(3), " strtoul (3)
+.SH TIRÁŽ
+Tato stránka je součástí projektu Linux \fIman\-pages\fP.  Popis projektu a
+informace o hlášení chyb najdete na http://www.kernel.org/doc/man\-pages/.
+
diff -ur man-pages-cs-0.18.20090209-orig/man-pages/man3/expm1.3 man-pages-cs-0.18.20090209/man-pages/man3/expm1.3
--- man-pages-cs-0.18.20090209-orig/man-pages/man3/expm1.3	1999-05-31 19:28:31.000000000 +0200
+++ man-pages-cs-0.18.20090209/man-pages/man3/expm1.3	2009-10-08 10:21:52.000000000 +0200
@@ -1,29 +1,76 @@
-.TH EXPM1 3  "5.ledna 1997" "GNU" "Linux - příručka programátora"
+.\" Aktualizováno podle man-pages-3.09-2 z distribuce Fedora 10
+.TH EXPM1 3  "7. října 2009" "GNU" "Linux - příručka programátora"
 .do hla cs
 .do hpf hyphen.cs
 .SH JMÉNO
-expm1, log1p \- exponenciální funkce minus 1, logaritmus čísla 1 plus argument
+expm1, exmp1f, expm1l \- exponenciální funkce minus 1
 .SH SYNTAXE
 .nf
 .B #include <math.h>
 .sp
-.BI "double expm1 ( double " x " );"
+.BI "double expm1 (double " x " );"
+.BI "float expm1f (float " x " );"
+.BI "long double expm1 (long double " x " );"
+.fi
 .sp
-.BI "double log1p ( double " x " );"
+Linkujte s \fI -lm\fP
 .fi
+.sp
+Vyžaduje Feature Test Makro pro glibc (viz \fBfeature_test_macros\fP(7)):
+.sp
+\fBexpm1()\fP: _BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE >= 500
+|| _ISOC99_SOURCE; nebo \fIcc -std=c99\fP
+.br
+\fBexpm1f\fP(), \fBexpm1l\fP(): _BSD_SOURCE || _SVID_SOURCE ||
+_XOPEN_SOURCE >= 600 || _ISOC99_SOURCE; nebo \fIcc -std=c99\fP
 .SH POPIS
 .BI expm1( x )
-vrací číslo odpovídající `exp (\fIx\fP) - 1'. Toto číslo je počítáno
-algoritmem, který je poměrně přesný i v případě, že číslo 
-\fIx\fP je blízko čísla nula. -- v tomto případě bude `exp (\fIx\fP) - 1'
+vrací číslo odpovídající
+.TP
+exp (\fIx\fP) - 1
+.LP
+Toto číslo je počítáno
+algoritmem, který je poměrně přesný i v případě, že číslo
+\fIx\fP je blízko čísla nula. V tomto případě bude `exp (\fIx\fP) - 1'
 nevhodné, protože bychom odečítali dvě skoro stejná čísla.
-.PP
-.BI log1p( x )
-vrací hodnotu `log (1 + \fIx\fP)'. Je počítána algoritmem, který je poměrně
-přesný i v případě, kdy je číslo \fIx\fP skoro nula.
+.SH NÁVRATOVÁ HODNOTA
+Při úspěchu vrací tato funkce \fIexp(x) - 1\fP.
+.sp
+Je-li \fIx\fP NaN, je vráceno NaN.
+.sp
+Je-li \fIx\fP +0 (-0), je vráceno +0 (-0).
+.sp
+Je-li \fIx\fP plus nekonečno, je vráceno plus nekonečno.
+.sp
+Je-li \fIx\fP mínus nekonečno, je vráceno -1.
+.sp
+Pokud výsledek přeteče, je vystavena chyba rozsahu a funkce vrátí
+.B -HUGE_VAL, -HUGE_VALF
+nebo
+.B -HUGE_VALL.
+.SH CHYBY
+Pro více informací zda funkce při svém volání generovala chybu viz
+\fB math_error\fP(7).
+.sp
+Mohou se objevit následující chyby:
+.sp
+.TP
+Chyba rozsahu,  přetečení
+
+Je signalizována výjimka plovoucí čárky(\fBFE_OVERFLOW\fP).
+.LP
+Tato funkce nenastavuje \fIerrno\fP.
 .SH SPLŇUJE STANDARDY
-BSD
+C99, POSIX.1-2001.
+.SH CHYBY
+Pro některé velké záporné hodnoty \fIx\fP (pro něž se výsledek funkce blíží -1)
+vystaví \fBexpm1\fP() nesprávnou výjimku podtečení v plovoucí čárce.
+
+Pro některé velké kladné hodnoty \fIx\fP vystaví \fBexmp1\fP() vedle výjimky přetečení
+ještě nesprávnou výjimku neplatná operace v plovoucí čárce a vrátí NaN místo plus nekonečno.
 .SH DALŠÍ INFORMACE
-.BR exp "(3), " log (3)
-.SH VAROVÁNÍ
-Překlad je pravděpodobně zastaralý. Pokud chcete pomoci s jeho aktualizací, zamiřte na http://man-pages-cs-wiki.homelinux.net/
+.BR exp "(3), " log "(3), " log1p "(3)
+.SH TIRÁŽ
+Tato stránka je součástí projektu Linux \fIman\-pages\fP.  Popis projektu a
+informace o hlášení chyb najdete na http://www.kernel.org/doc/man\-pages/.
+
diff -ur man-pages-cs-0.18.20090209-orig/man-pages/man3/getprotoent.3 man-pages-cs-0.18.20090209/man-pages/man3/getprotoent.3
--- man-pages-cs-0.18.20090209-orig/man-pages/man3/getprotoent.3	1999-05-31 19:28:32.000000000 +0200
+++ man-pages-cs-0.18.20090209/man-pages/man3/getprotoent.3	2009-10-08 10:23:31.000000000 +0200
@@ -1,4 +1,5 @@
-.TH GETPROTOENT 3  "31. března 1997" "BSD" "Linux - příručka programátora"
+.\" Aktualizováno podle man-pages-3.09-2 z distribuce Fedora 10
+.TH GETPROTOENT 3  "6. října 2009" "BSD" "Linux - příručka programátora"
 .do hla cs
 .do hpf hyphen.cs
 .SH JMÉNO
@@ -19,22 +20,23 @@
 .B void endprotoent(void);
 .fi
 .SH POPIS
-Funkce \fBgetprotoent()\fP přečte další záznam z databáze protokolů 
-\fI/etc/protocols\fP a vrátí strukturu \fIprotoent\fP, která obsahuje
-jednotlivá pole. Soubor \fI/etc/protocols\fP je otevřen, je-li potřeba.
+Funkce \fBgetprotoent()\fP přečte další záznam z databáze protokolů
+(viz \fBprotocols\fP(5)) a vrátí strukturu \fIprotoent\fP, která obsahuje
+jednotlivá pole. Připojení k databázi je otevřeno, je-li potřeba.
 .PP
 Funkce \fBgetprotobyname()\fP vrací strukturu \fIprotoent\fP
-ze souboru \fI/etc/protocols\fP pro řádek, který vyhovuje
-jménu \fIname\fP.
+ze databáze pro řádek, který vyhovuje
+jménu \fIname\fP. Připojení k databázi je otevřeno, je-li potřeba.
 .PP
-Funkce \fBgetprotobynumber()\fP vrací strukturu \fIprotoent\fP
+Funkce \fBgetprotobynumber()\fP vrací strukturu \fIprotoent\fP z databáze
 pro řádek, který vyhovuje protokolovému číslu \fInumber\fP.
+Připojení k databázi je otevřeno, je-li potřeba.
 .PP
 Funkce \fBsetprotoent()\fP otevře databázi protokolů a nastaví ukazovátko na
 jeho začátek. Je-li \fIstayopen\fP nenulové, soubor nebude mezi voláními
 \fBgetprotobyname()\fP a \fBgetprotobynumber()\fP uzavírán.
 .PP
-Funkce \fBendprotoent()\fP uzavírá \fI/etc/protocols\fP.
+Funkce \fBendprotoent()\fP uzavírá spojení s databází.
 .PP
 Struktura \fIprotoent\fP je definována v \fI<netdb.h>\fP následovně:
 .sp
@@ -43,9 +45,9 @@
 .ne 5
 .ta 8n 16n 32n
 struct protoent {
-	char	*p_name;		/* official protocol name */
-	char	**p_aliases;		/* alias list */
-	int	p_proto;		/* protocol number */
+    char    *p_name;        /* official protocol name */
+    char    **p_aliases;        /* alias list */
+    int    p_proto;        /* protocol number */
 }
 .ta
 .fi
@@ -72,8 +74,10 @@
 databáze protokolů
 .PD
 .SH SPLŇUJE STANDARDY
-BSD 4.3
+4.3BSD, POSIX.1-2001.
 .SH DALŠÍ INFORMACE
-.BR getservent "(3), " getnetent "(3), " protocols (5)
-.SH VAROVÁNÍ
-Překlad je pravděpodobně zastaralý. Pokud chcete pomoci s jeho aktualizací, zamiřte na http://man-pages-cs-wiki.homelinux.net/
+.BR getservent "(3), " getnetent "(3), " protocols " (5), " getprotent_r "(3)
+.SH TIRÁŽ
+Tato stránka je součástí projektu Linux \fIman\-pages\fP.  Popis projektu a
+informace o hlášení chyb najdete na http://www.kernel.org/doc/man\-pages/.
+
diff -ur man-pages-cs-0.18.20090209-orig/man-pages/man3/getservent.3 man-pages-cs-0.18.20090209/man-pages/man3/getservent.3
--- man-pages-cs-0.18.20090209-orig/man-pages/man3/getservent.3	1999-05-31 19:28:32.000000000 +0200
+++ man-pages-cs-0.18.20090209/man-pages/man3/getservent.3	2009-10-08 10:24:36.000000000 +0200
@@ -1,4 +1,5 @@
-.TH GETSERVENT 3  "31. března 1997" "BSD" "Linux - příručka programátora"
+.\" Aktualizováno podle man-pages-3.09-2 z distribuce Fedora 10
+.TH GETSERVENT 3  "6. října 2009" "BSD" "Linux - příručka programátora"
 .do hla cs
 .do hpf hyphen.cs
 .SH JMÉNO
@@ -19,23 +20,25 @@
 .B void endservent(void);
 .fi
 .SH POPIS
-Funkce \fBgetservent()\fP čte další řádek ze souboru
-\fI/etc/services\fP a vrací strukturu \fIservent\fP obsahující pole tohoto
-záznamu. Soubor \fI/etc/services\fP je otevřen, je-li potřeba.
-.PP
-Funkce \fBgetservbyname()\fP vrací strukturu \fIservent\fP ze souboru
-\fI/etc/services\fP, která vyhovuje službě \fIname\fP používající protokol
-\fIproto\fP.
+Funkce \fBgetservent()\fP čte další řádek z databáze
+(vis \fBservices\fP(5)) a vrací strukturu \fIservent\fP obsahující pole tohoto
+záznamu. Spojení s databází je otevřeno, je-li třeba.
+.PP
+Funkce \fBgetservbyname()\fP vrací strukturu \fIservent\fPz databáze,
+která vyhovuje službě \fIname\fP používající protokol
+\fIproto\fP. Pokud je \fIproto\fP NULL, lze přířadit libovolný protokol.
+Spojení s databází je otevřeno, je-li třeba.
 .PP
 Funkce \fBgetservbyport()\fP vrací ukazatel na strukturu \fIservent\fP
 pro záznam, který vyhovuje portu \fIport\fP zadanému v síťovém pořadí bajtů
-a protokolu \fIproto\fP. 
+a protokolu \fIproto\fP. Pokud je \fIproto\fP NULL, lze přířadit libovolný protokol.
+Spojení s databází je otevřeno, je-li třeba.
 .PP
-Funkce \fBsetservent()\fP otevře soubor \fI/etc/services\fP a nastaví
+Funkce \fBsetservent()\fP otevře databázi a nastaví
 ukazovátko na jeho začátek.  Je-li \fIstayopen\fP nenulové (1), potom soubor
 nebude mezi voláními \fBgetservbyname()\fP a \fBgetservbyport()\fP uzavřen.
 .PP
-Funkce \fBendservent()\fP uzavře soubor \fI/etc/services\fP.
+Funkce \fBendservent()\fP uzavře databázi.
 .PP
 Struktura \fIservent\fP je definována v \fI<netdb.h>\fP následovně:
 .sp
@@ -44,10 +47,10 @@
 .ne 6
 .ta 8n 16n 32n
 struct servent {
-	char	*s_name;		/* official service name */
-	char	**s_aliases;		/* alias list */
-	int	s_port;			/* port number */
-	char	*s_proto;		/* protocol to use */
+    char    *s_name;        /* official service name */
+    char    **s_aliases;        /* alias list */
+    int    s_port;            /* port number */
+    char    *s_proto;        /* protocol to use */
 }
 .ta
 .fi
@@ -75,8 +78,10 @@
 .I /etc/services
 databáze služeb
 .SH SPLŇUJE STANDARDY
-BSD 4.3
+4.3BSD, POSIX.1-2001
 .SH DALŠÍ INFORMACE
-.BR getprotoent "(3), " getnetent "(3), " services (5)
-.SH VAROVÁNÍ
-Překlad je pravděpodobně zastaralý. Pokud chcete pomoci s jeho aktualizací, zamiřte na http://man-pages-cs-wiki.homelinux.net/
+.BR getprotoent "(3), " getnetent "(3), "getservent_r "(3), " services (5)
+.SH TIRÁŽ
+Tato stránka je součástí projektu Linux \fIman\-pages\fP.  Popis projektu a
+informace o hlášení chyb najdete na http://www.kernel.org/doc/man\-pages/.
+
diff -ur man-pages-cs-0.18.20090209-orig/man-pages/man3/index.3 man-pages-cs-0.18.20090209/man-pages/man3/index.3
--- man-pages-cs-0.18.20090209-orig/man-pages/man3/index.3	1999-05-31 19:28:33.000000000 +0200
+++ man-pages-cs-0.18.20090209/man-pages/man3/index.3	2009-10-08 10:24:28.000000000 +0200
@@ -1,4 +1,5 @@
-.TH INDEX 3  "5.ledna 1997" "GNU" "Linux - příručka programátora"
+.\" Aktualizováno podle man-pages-3.09-2 z distribuce Fedora 10
+.TH INDEX 3  "7. října 2009" "GNU" "Linux - příručka programátora"
 .do hla cs
 .do hpf hyphen.cs
 .SH JMÉNO
@@ -23,9 +24,12 @@
 FUnkce \fBindex()\fP a \fBrindex()\fP vrací ukazatel na nalezený řetězec
 nebo NULL pokud nebyl znak nalezen.
 .SH SPLŇUJE STANDARDY
-BSD 4.3
+4.3BSD, označeno jako zastaralé v POSIX.1-2001. POSIX.1-2008 odstranil
+specifikaci \fBindex()\fP a \fBrindex()\fP.
 .SH DALŠÍ INFORMACE
 .BR memchr "(3), " strchr "(3), " strpbrk "(3), " strrchr (3),
 .BR strsep "(3), " strspn "(3), " strstr "(3), " strtok (3)
-.SH VAROVÁNÍ
-Překlad je pravděpodobně zastaralý. Pokud chcete pomoci s jeho aktualizací, zamiřte na http://man-pages-cs-wiki.homelinux.net/
+.SH TIRÁŽ
+Tato stránka je součástí projektu Linux \fIman\-pages\fP.  Popis projektu a
+informace o hlášení chyb najdete na http://www.kernel.org/doc/man\-pages/.
+
